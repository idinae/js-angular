@NgModule - с него можем да създаваме собствени модули
@CommonModule - от него идват структурните директиви *ngFor, *ngIf

Едно приложение трябва да има поне:
- SharedModule - общи функционалности: компоненти, директиви, pipes
- CoreModule - компоненти и сървиси, които се използват веднъж, напр. навигация

Ново приложение с рутиране
1. Създаване на проекта
   ng new app-with-router -> казваме, че ще ползваме рутиране, със CSS
   cd app-with-router
2. Създаваме SharedModule и CoreModule: ng g m shared, ng g m core - създават се в папка app
3. Отиваме в src/app/app-routing.module.ts:
   export const AppRoutingModule = RouterModule.forRoot(routes);
4. В app.component.html се е създало <router-outlet></router-outlet> - показва къде ще се визуализират страниците от рутера
   a/ home
   - ng g c home
   - в app-routing.module.ts - routes слагаме { path: '', pathMatch: 'full', component: HomeComponent }, импортваме
   - над <router-outlet> се появява <app-home> ако погледнем в chrome dev tool
   b/ about
   - ng g c about
   - в app-routing.module.ts - routes слагаме { path: 'about', component: AboutComponent }, импортваме
   c/ navigation - в core модула, защото се използва на едно място
   - ng g c core/navigation
   - тя сама се добавя в най-близкия модул - core.module.ts -> експортваме я: в @NgModule добавяме exports: [NavigationComponent]
   - импортваме CoreModule в главния модул - app.module.ts -> оттук вече може да се ползва в app.component.html
! в shared компонентата - неща, които могат да бъдат споделени
   d/ loader - в shared
    - ng g c shared/loader
    - в loader.component.ts, в export class LoaderComponent добавяме: @Input() showLoader: boolean;
    - в loader.component.html добавяме <div *ngIf="showLoader">Loading...</div>; трием ngOnInit()
    - ако искаме да бъде споделена компонентата loader, слагаме в @NgModule...exports: [LoaderComponent]
    - ако искаме да я използваме в app.module - трябва да я импортнем
! в imports на @NgModule се слагат само други модули
5. НАВИГАЦИЯ
   - не се ползва href, а angular рутера: директивата routerLink="/", атрибутна, а не е структурна и затова не е със *
   - в core.module.ts се добавя RouterModule в imports -> вече работи!
   ! за админ може да се създаде друга компонента, която с *ngIf да се визулаизира от app.component
   ползваме [ngClass]="{ 'admin': isAdmin}" в html-а на навигацията, а isAdmin се декларира в ts-файла на навигацията
6. USER модул
   - ще има собствена навигация
   - ng g m user
   - ng g c user/list
   - ng g c user/detail
   - в папка user създаваме user-routing.module.ts и взимаме кода от app-routing.module, но 
      : заместваме Home и About с ListComponent и DetailComponent
      : сменяме адреса, името на компонентата
      : името на const, която се експортва
      : forChild вместо forRoot
