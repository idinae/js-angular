[ ] Подготовка на средата
1. Импортва се базата данни през CMD (не през mongo)
mongorestore -d forum "D:\forum"
2. Инсталира се необходимото от package.json
npm i
3. Създава се инстанция на Angular
ng new comp
cd comp
ng serve
4. Всички ресурси се копират в същата папка
    - може да се ползват линковете -> слагат се в head на файла index.html в проекта
    - може да се свалят, което е по-добре -> слагат се в папката assets и се реферират: '/assets/fontname'

[ ] Разхвърляме структурата на страницата по компоненти
1. Генерират се компоненти според темплейта:
    - header: ng g c header
    - footer: ng g c footer
    - aside: ng g c aside 
    - theme-list: ng g c theme-list
2. Слагаме съответните части от html-а в компонентите
    - в index.html слагаме основните части и селекторите на header, root и footer - компонентите, които ще бъдат като bootstrap
      те четат съответно от компонентите app-header, app.module (root) и app-footer
    - разхвърляме html-а от темплейта в html-ите на нашето приложение, като в index.html слагаме нещата, които са за homepage
    - в app.module.ts, bootstrap: добавяме HeaderComponent, FooterComponent
    - разхвърляме css-a по отделните компоненти
3. Генерираме сървис user, който ще се грижи за това дали сме логнати или не -> user.service.ts:
    - ng g s user
    - в .ts файла на компонентата, в която ще се използва сървисът, се записва в конструктора:
      constructor(public userService: UserService) { ... }
      по този начин се създава инстанция на сървиса, която се използва в приложението, дори да се извика от друг сървис
    - в user.service.ts добавяме метод за login, махаме останалото
4. В header.component.html се добавя *ngIf="userService.isLogged" - какво да се вижда в зависимост дали потребителят е логнат
    - добавят се loginHandler() и logoutHandler() в header.component.html
    - в header.component.ts се добавя
    - в app.module.ts се добавя: providers: [UserService]
    - в компонентата можем да направим getter: get isLogged(): boolean {return this.userService.isLogged}
      така в html-а използваме директно променливата isLogged
5. Правим сървис storage: ng g s storage
    - имплементираме го
6. Правим сървис team: ng g s theme
    - импортва се в app.module.ts
    - правим си папка interfaces/theme.ts - тук слагаме структурата на темите:
        -- от mongo db.themes.find().pretty()
        -- по структурата правим модели на theme, user
        -- правим index.ts, в който експортваме theme, user, после импортваме от './interfaces' - нарича се barrow
7. В environment.ts добавяме apiUrl: 'http://localhost:300/api'
    ! Ако се деплойва на production, добавя се в environment.prod.ts
